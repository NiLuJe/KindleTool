Recommended Compilation Directions

Basically, you'll need a working toolchain, OpenSSL, and libarchive >= 3.0.3 (with gzip support).

If you don't want to bother, static binaries are available here: http://www.mobileread.com/forums/showpost.php?p=2074293&postcount=187

To compile for Linux:
	1) Install the dependency packages: zlib-dev, libarchive-dev, libssl-dev
	1.5) Debian/Ubuntu people: You'll need zlib1g-dev, libarchive-dev and libarchive12
	2) Compile using "make" in the tool's directory
	3) If you want to install it in /usr/local, run "make install". (I'd recommend using this through the checkinstall tool on Debian/Ubuntu).
	2.5) If GCC throws a fit about libarchive, or if it fails to link with a bunch of undefined references to archive_* symbols, your libarchive version is too old.
		You'll have to build it manually (get the latest 3.x release from http://libarchive.github.com/).
		See https://github.com/NiLuJe/KindleTool/issues/1 for more details.

Fellow Gentoo users, there's a portage overlay in the gentoo folder, enjoy ;).

To compile for OSX:
	1) Get MacPorts
	2) Setup a local portfile repository (http://guide.macports.org/#development.local-repositories) based on the one found in the ports folder (AFAIK, MacPorts' default prefix is /opt/local).
	2B) Don't forget to properly edit MacPorts' sources.conf file, and to run portindex in the root of your repository
	3) Install the package: kindletool

To compile for Windows:
	1) Get Cygwin
	2) Install the required packages for a proper toolchain (gcc4, binutils, autoconf, automake, libtool, make, ...)
	3) Install the packages: libopenssl100 / openssl-devel, zlib / zlib-devel, git
	4) Compile and install libarchive >= 3.0.3
	4.1) I recommend a minimal build configured via
		./configure --prefix=/usr --enable-static --enable-shared --disable-xattr --disable-acl --with-zlib --without-bz2lib --without-lzmadec --without-iconv --without-lzma --without-nettle --without-expat --without-xml2
	4.2) If you want to download it via wget from the Cygwin shell, you'll have to install wget/curl, and jump through a few hoops to setup the SSL CA certs... (google is your friend).
	5) Compile using "make" in the tool's directory
	6) Install it by running "make install"

	BIS) Alternatively, you can also buld a native version via the MinGW or MinGW-w64 toolchain.
		On a native MinGW+MSYS toolchain, you'll probably have to tweak the Makefile, but it should handle a Linux cross toolchain properly with the mingw target ;).
		Check the tools/mingw directory for more details.
